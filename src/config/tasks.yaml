# Initialisierung und Vorbereitung
init_testing:
  description: >
    Initialize WCAG 2.2 testing process for {url}.
    
    Tasks:
    1. Define test scope and objectives
    2. Create testing framework
    3. Prepare analysis environment
    4. Set up reporting structure
  expected_output: >
    JSON configuration defining test scope, framework,
    and analysis requirements.
  agent: compliance_controller

verify_tool_availability:
  description: >
    Verify the availability of required testing tools for {url}.
    Confirm each tool's status before initiating testing.
  expected_output: >
    JSON list of available and unavailable tools.
  agent: compliance_controller
  context:
    - init_testing

# Technische Tests
run_pa11y_tests:
  description: >
    Execute and analyze Pa11y tests for {url}.
    
    Focus on:
    - Keyboard navigation
    - Focus management
    - Form controls
    - Error messages
    
    IMPORTANT: Only include actual Pa11y results.
    If Pa11y fails, report the error without assumptions.
  expected_output: >
    JSON report containing only actual Pa11y findings.
  agent: pa11y_analyzer
  context:
    - verify_tool_availability

run_axe_tests:
  description: >
    Execute and analyze Axe Core tests for {url}.
    
    Focus on:
    - Dynamic content
    - JavaScript interactions
    - AJAX updates
    - SPA behavior
    
    IMPORTANT: Only process when Axe is implemented.
    Report "not implemented" status if unavailable.
  expected_output: >
    JSON report of Axe Core results or implementation status.
  agent: axe_analyzer
  context:
    - verify_tool_availability

run_lighthouse_tests:
  description: >
    Execute and analyze Lighthouse tests for {url}.
    
    Check:
    - Performance impact
    - Mobile accessibility
    - Progressive enhancement
    - SEO aspects
    
    IMPORTANT: Only process when Lighthouse is implemented.
    Report "not implemented" status if unavailable.
  expected_output: >
    JSON report of Lighthouse results or implementation status.
  agent: lighthouse_analyzer
  context:
    - verify_tool_availability

# Struktur- und Inhaltsanalyse
analyze_wcag_structure:
  description: >
    Analyze accessibility structure and provide WCAG 2.2 mappings for {url}.

    Required Analysis:
    1. Document Structure:
       - Semantic HTML usage
       - Heading hierarchy
       - Landmark regions
       - ARIA implementation

    2. Content Relationships:
       - Information hierarchy
       - Content grouping
       - Related elements
       - Context associations

    3. Interactive Elements:
       - Form controls
       - Navigation mechanisms
       - Custom widgets
       - Focus management

    4. Technical Implementation:
       - HTML validation
       - ARIA patterns
       - Event handling
       - State management

    IMPORTANT: Provide detailed technical analysis with
    specific WCAG 2.2 criterion references.
  expected_output: >
    Structured JSON report containing:
    - Technical findings
    - WCAG mappings
    - Implementation details
    - Severity assessments
  agent: accessibility_analyzer
  context:
    - run_pa11y_tests
    - run_axe_tests
    - run_lighthouse_tests

# WCAG Mapping und Analyse
map_wcag_criteria:
  description: >
    Map identified issues to specific WCAG 2.2 criteria for {url}.

    Required Mapping:
    1. Criterion Identification:
       - Specific WCAG 2.2 references
       - Conformance levels
       - Related techniques
       - Applicable failures

    2. Impact Analysis:
       - Severity assessment
       - User impact
       - Scope of issue
       - Technical complexity

    3. Documentation:
       - Clear rationale
       - Supporting evidence
       - Related guidelines
       - Testing notes

    4. Context Integration:
       - Relationship to other issues
       - Implementation considerations
       - Testing implications
       - Validation requirements

    IMPORTANT: Ensure comprehensive coverage of all
    relevant WCAG 2.2 success criteria.
  expected_output: >
    Detailed JSON mapping containing:
    - WCAG criterion references
    - Impact assessments
    - Technical details
    - Documentation links
  agent: wcag_checkpoints
  context:
    - analyze_wcag_structure

# LÃ¶sungsentwicklung und Validierung
develop_remediation:
  description: >
    Create detailed remediation guidance for identified issues in {url}.

    Required Components:
    1. Technical Solutions:
       - Step-by-step fixes
       - Code examples
       - Implementation guidance
       - Testing procedures

    2. Best Practices:
       - Recommended approaches
       - Alternative solutions
       - Prevention strategies
       - Maintenance guidance

    3. Testing Guidelines:
       - Validation steps
       - Test scenarios
       - Expected outcomes
       - Success criteria

    4. Documentation:
       - Clear instructions
       - Technical requirements
       - Resource references
       - Support information

    IMPORTANT: Provide practical, implementable solutions
    with clear validation steps.
  expected_output: >
    Comprehensive JSON remediation guide with:
    - Detailed solutions
    - Implementation steps
    - Testing procedures
    - Documentation
  agent: remediation_specialist
  context:
    - map_wcag_criteria

validate_results:
  description: >
    Review and validate all analysis results and remediation plans for {url}.

    Validation Requirements:
    1. Completeness Check:
       - Test coverage
       - WCAG mapping accuracy
       - Solution completeness
       - Documentation quality

    2. Quality Assurance:
       - Technical accuracy
       - Implementation viability
       - Testing thoroughness
       - Documentation clarity

    3. Standards Compliance:
       - WCAG 2.2 alignment
       - Best practices adherence
       - Testing methodology
       - Documentation standards

    4. Final Review:
       - Overall assessment
       - Gap analysis
       - Quality metrics
       - Improvement recommendations

    IMPORTANT: Ensure comprehensive validation of all
    aspects of the accessibility analysis.
  expected_output: >
    Final validation report containing:
    - Quality assessment
    - Coverage analysis
    - Improvement recommendations
    - Sign-off status
  agent: compliance_controller
  context:
    - develop_remediation