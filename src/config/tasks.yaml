# Initialisierung und Vorbereitung
init_testing:
  description: >
    Initialize WCAG 2.2 testing process for {url}.
    
    Tasks:
    1. Define test scope and objectives
    2. Create testing framework
    3. Prepare analysis environment
    4. Set up reporting structure
  expected_output: >
    JSON configuration defining test scope, framework,
    and analysis requirements.
  agent: compliance_controller

verify_tool_availability:
  description: >
    Verify the availability of required testing tools for {url}.
    Confirm each tool's status before initiating testing.
  expected_output: >
    JSON list of available and unavailable tools.
  agent: compliance_controller
  context:
    - init_testing

# Technische Tests
run_pa11y_tests:
  description: >
    Execute Pa11y accessibility tests for the given URL.
    Use the Pa11y tool to conduct a thorough accessibility analysis.
    
    Required checks:
    1. Execute Pa11y with WCAG2AA standard
    2. Check for all accessibility violations
    3. Include error context and code snippets
    4. Process and validate all results
    
    Return the actual test results in a well-structured JSON format.
  expected_output: >
    JSON object containing Pa11y test results with actual findings
  agent: pa11y_analyzer
  context:
    url: "{{url}}"
    description: "URL to be analyzed for accessibility issues"
    expected_output: "Accessibility test results for the given URL"

run_axe_tests:
  description: >
    Execute Axe Core accessibility tests for the given URL.
    Use the Axe Core tool to perform comprehensive accessibility testing.
    
    Required checks:
    1. Run complete Axe Core analysis
    2. Check all WCAG 2.1 rules
    3. Include detailed issue descriptions
    4. Provide specific code contexts
    
    Return the actual test results in a well-structured JSON format.
    DO NOT return example data.
  expected_output: >
    JSON object containing actual Axe Core test results
  agent: axe_analyzer

run_lighthouse_tests:
  description: >
    Execute Lighthouse accessibility tests for the given URL.
    Use Lighthouse to perform a complete accessibility audit.
    
    Required checks:
    1. Run Lighthouse accessibility analysis
    2. Capture all accessibility scores
    3. Document specific violations
    4. Include performance impact
    
    Return the actual test results in a well-structured JSON format.
    DO NOT return example data.
  expected_output: >
    JSON object containing actual Lighthouse accessibility test results
  agent: lighthouse_analyzer

# Struktur- und Inhaltsanalyse
analyze_wcag_structure:
  description: >
    Analyze the HTML structure and accessibility features.
    Perform a detailed static analysis of the page content.
    
    Required checks:
    1. Document structure
    2. ARIA implementation
    3. Form accessibility
    4. Content relationships
    
    Use the actual page content for analysis.
    DO NOT return example data.
  expected_output: >
    Detailed analysis of actual accessibility implementation
  agent: accessibility_analyzer

# WCAG Mapping und Analyse
map_wcag_criteria:
  description: >
    Analyze actual tool results and map to WCAG 2.2 criteria.
    Use the results from previous tasks for analysis.
    
    Required:
    1. Process actual test results
    2. Map to specific WCAG criteria
    3. Assess conformance levels
    4. Validate findings
    
    Base analysis only on actual test results.
    DO NOT create artificial results.
  expected_output: >
    Structured JSON containing WCAG mappings for actual findings
  agent: wcag_checkpoints
  context:
    - run_pa11y_tests
    - run_axe_tests
    - run_lighthouse_tests
    - analyze_wcag_structure

# LÃ¶sungsentwicklung und Validierung
develop_remediation:
  description: >
    Create specific solutions for identified issues.
    Base recommendations on actual findings.
    
    Required:
    1. Address each actual issue
    2. Provide specific code fixes
    3. Include implementation steps
    4. Add validation tests
    
    Focus only on real issues found in testing.
    DO NOT create solutions for example issues.
  expected_output: >
    Detailed remediation guidance for actual findings
  agent: remediation_specialist
  context:
    - map_wcag_criteria

validate_results:
  description: >
    Review and validate all analysis results.
    Focus on actual findings and solutions.
    
    Validate:
    1. Accuracy of findings
    2. WCAG mappings
    3. Solution completeness
    4. Documentation quality
    
    Only validate actual test results.
    DO NOT include artificial validations.
  expected_output: >
    Validation report based on actual findings
  agent: compliance_controller
  context:
    - map_wcag_criteria
    - develop_remediation